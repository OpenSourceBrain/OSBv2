/* tslint:disable */
/* eslint-disable */
/**
 * Workspaces manager API
 * Opensource Brain Platform - Reference Workspaces manager API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Keycloak User
 * @export
 * @interface User
 */
export interface User {
    /**
     * Keycloak user id
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * First Name of the keycloak user
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * Last Name of the keycloak user
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * Username of the keycloak user
     * @type {string}
     * @memberof User
     */
    username?: string;
    /**
     * Email address of the keycloak user
     * @type {string}
     * @memberof User
     */
    email?: string;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'firstName': !exists(json, 'first_name') ? undefined : json['first_name'],
        'lastName': !exists(json, 'last_name') ? undefined : json['last_name'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'first_name': value.firstName,
        'last_name': value.lastName,
        'username': value.username,
        'email': value.email,
    };
}


