/* tslint:disable */
/* eslint-disable */
/**
 * Workspaces manager API
 * Opensource Brain Platform - Reference Workspaces manager API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * key cloak User
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    id?: number;
    /**
     * Keycloak user id
     * @type {string}
     * @memberof User
     */
    keycloakId?: string;
    /**
     * First name of the user (derived from Keycload)
     * @type {string}
     * @memberof User
     */
    firstname?: string;
    /**
     * Last name of the user (derived from Keycload)
     * @type {string}
     * @memberof User
     */
    lastname?: string;
    /**
     * Email address of the user (derived from Keycloak)
     * @type {string}
     * @memberof User
     */
    email?: string;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'keycloakId': !exists(json, 'keycloak_id') ? undefined : json['keycloak_id'],
        'firstname': !exists(json, 'firstname') ? undefined : json['firstname'],
        'lastname': !exists(json, 'lastname') ? undefined : json['lastname'],
        'email': !exists(json, 'email') ? undefined : json['email'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'keycloak_id': value.keycloakId,
        'firstname': value.firstname,
        'lastname': value.lastname,
        'email': value.email,
    };
}


