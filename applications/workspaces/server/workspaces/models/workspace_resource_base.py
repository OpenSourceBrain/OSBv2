# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from workspaces.models.base_model_ import Model
from workspaces.models.resource_status import ResourceStatus
from workspaces.models.resource_type import ResourceType
from workspaces import util

from workspaces.models.resource_status import ResourceStatus  # noqa: E501
from workspaces.models.resource_type import ResourceType  # noqa: E501

class WorkspaceResourceBase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, status=None, timestamp_created=None, timestamp_updated=None, timestamp_last_opened=None, resource_type=None, path=None):  # noqa: E501
        """WorkspaceResourceBase - a model defined in OpenAPI

        :param id: The id of this WorkspaceResourceBase.  # noqa: E501
        :type id: int
        :param name: The name of this WorkspaceResourceBase.  # noqa: E501
        :type name: str
        :param status: The status of this WorkspaceResourceBase.  # noqa: E501
        :type status: ResourceStatus
        :param timestamp_created: The timestamp_created of this WorkspaceResourceBase.  # noqa: E501
        :type timestamp_created: datetime
        :param timestamp_updated: The timestamp_updated of this WorkspaceResourceBase.  # noqa: E501
        :type timestamp_updated: datetime
        :param timestamp_last_opened: The timestamp_last_opened of this WorkspaceResourceBase.  # noqa: E501
        :type timestamp_last_opened: datetime
        :param resource_type: The resource_type of this WorkspaceResourceBase.  # noqa: E501
        :type resource_type: ResourceType
        :param path: The path of this WorkspaceResourceBase.  # noqa: E501
        :type path: str
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'status': ResourceStatus,
            'timestamp_created': datetime,
            'timestamp_updated': datetime,
            'timestamp_last_opened': datetime,
            'resource_type': ResourceType,
            'path': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'status': 'status',
            'timestamp_created': 'timestamp_created',
            'timestamp_updated': 'timestamp_updated',
            'timestamp_last_opened': 'timestamp_last_opened',
            'resource_type': 'resource_type',
            'path': 'path'
        }

        self._id = id
        self._name = name
        self._status = status
        self._timestamp_created = timestamp_created
        self._timestamp_updated = timestamp_updated
        self._timestamp_last_opened = timestamp_last_opened
        self._resource_type = resource_type
        self._path = path

    @classmethod
    def from_dict(cls, dikt) -> 'WorkspaceResourceBase':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkspaceResourceBase of this WorkspaceResourceBase.  # noqa: E501
        :rtype: WorkspaceResourceBase
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this WorkspaceResourceBase.


        :return: The id of this WorkspaceResourceBase.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WorkspaceResourceBase.


        :param id: The id of this WorkspaceResourceBase.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this WorkspaceResourceBase.

        WorkspaceResource name  # noqa: E501

        :return: The name of this WorkspaceResourceBase.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WorkspaceResourceBase.

        WorkspaceResource name  # noqa: E501

        :param name: The name of this WorkspaceResourceBase.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def status(self):
        """Gets the status of this WorkspaceResourceBase.


        :return: The status of this WorkspaceResourceBase.
        :rtype: ResourceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorkspaceResourceBase.


        :param status: The status of this WorkspaceResourceBase.
        :type status: ResourceStatus
        """

        self._status = status

    @property
    def timestamp_created(self):
        """Gets the timestamp_created of this WorkspaceResourceBase.

        Date/time of creation of the WorkspaceResource  # noqa: E501

        :return: The timestamp_created of this WorkspaceResourceBase.
        :rtype: datetime
        """
        return self._timestamp_created

    @timestamp_created.setter
    def timestamp_created(self, timestamp_created):
        """Sets the timestamp_created of this WorkspaceResourceBase.

        Date/time of creation of the WorkspaceResource  # noqa: E501

        :param timestamp_created: The timestamp_created of this WorkspaceResourceBase.
        :type timestamp_created: datetime
        """

        self._timestamp_created = timestamp_created

    @property
    def timestamp_updated(self):
        """Gets the timestamp_updated of this WorkspaceResourceBase.

        Date/time of last updating of the WorkspaceResource  # noqa: E501

        :return: The timestamp_updated of this WorkspaceResourceBase.
        :rtype: datetime
        """
        return self._timestamp_updated

    @timestamp_updated.setter
    def timestamp_updated(self, timestamp_updated):
        """Sets the timestamp_updated of this WorkspaceResourceBase.

        Date/time of last updating of the WorkspaceResource  # noqa: E501

        :param timestamp_updated: The timestamp_updated of this WorkspaceResourceBase.
        :type timestamp_updated: datetime
        """

        self._timestamp_updated = timestamp_updated

    @property
    def timestamp_last_opened(self):
        """Gets the timestamp_last_opened of this WorkspaceResourceBase.

        Date/time of last opening of the WorkspaceResource  # noqa: E501

        :return: The timestamp_last_opened of this WorkspaceResourceBase.
        :rtype: datetime
        """
        return self._timestamp_last_opened

    @timestamp_last_opened.setter
    def timestamp_last_opened(self, timestamp_last_opened):
        """Sets the timestamp_last_opened of this WorkspaceResourceBase.

        Date/time of last opening of the WorkspaceResource  # noqa: E501

        :param timestamp_last_opened: The timestamp_last_opened of this WorkspaceResourceBase.
        :type timestamp_last_opened: datetime
        """

        self._timestamp_last_opened = timestamp_last_opened

    @property
    def resource_type(self):
        """Gets the resource_type of this WorkspaceResourceBase.


        :return: The resource_type of this WorkspaceResourceBase.
        :rtype: ResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this WorkspaceResourceBase.


        :param resource_type: The resource_type of this WorkspaceResourceBase.
        :type resource_type: ResourceType
        """
        if resource_type is None:
            raise ValueError("Invalid value for `resource_type`, must not be `None`")  # noqa: E501

        self._resource_type = resource_type

    @property
    def path(self):
        """Gets the path of this WorkspaceResourceBase.

        WorkspaceResource path where the resource will stored in the pvc.  # noqa: E501

        :return: The path of this WorkspaceResourceBase.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this WorkspaceResourceBase.

        WorkspaceResource path where the resource will stored in the pvc.  # noqa: E501

        :param path: The path of this WorkspaceResourceBase.
        :type path: str
        """

        self._path = path
