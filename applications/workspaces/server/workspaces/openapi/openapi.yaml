openapi: 3.0.0
info:
  description: Opensource Brain Platform - Reference Workspaces manager API
  license:
    name: UNLICENSED
  title: OSB Workspaces manager API
  version: 0.2.0
servers:
- description: SwaggerHub API Auto Mocking
  url: /api
tags:
- description: rest API for Workspaces manager
  name: rest
- description: Producer
  name: Producer
- description: Consumer
  name: Consumer
- description: Client
  name: Client
paths:
  /live:
    get:
      operationId: live
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Healthy
        "500":
          description: Application is not healthy
      summary: Test if application is healthy
      tags:
      - k8s
      x-openapi-router-controller: workspaces.controllers.k8s_controller
  /osbrepository:
    get:
      operationId: osbrepository_get
      parameters:
      - description: The page number for starting to collect the result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: The number of items to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: "The search string for filtering of the items to return. Format\
          \ [field/relation[field]][comparator = , __not= , __like= ][value]. Multiple\
          \ parameters are concatenated with + (OR operator)"
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: name=myrepo+summary__like=%reposi%
          nullable: true
          type: string
        style: form
      - description: The tags to filter with Multiple parameters are concatenated
          with + (OR operator)
        explode: true
        in: query
        name: tags
        required: false
        schema:
          example: tag1+tag2
          nullable: true
          type: string
        style: form
      - description: The tags to filter with Multiple parameters are concatenated
          with + (OR operator)
        explode: true
        in: query
        name: types
        required: false
        schema:
          example: experimental+modeling
          nullable: true
          type: string
        style: form
      - description: The id of the owner user to filter with
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          example: ccfbe969-f7e2-4191-80c4-821dc5a97a28
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_osbrepository_get_200_response'
          description: Return all available repositories
      summary: Used to list all available repositories.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    post:
      operationId: osbrepository_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSBRepository'
        description: The OSB repository to save.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSBRepository'
          description: Save successful.
        "400":
          description: The OSB repository already exists.
      security:
      - bearerAuth: []
      summary: Used to save a OSB Repository. The user_id (keycloak user id) will
        be automatically filled with the current user
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /osbrepository/description:
    get:
      operationId: get_description
      parameters:
      - explode: true
        in: query
        name: uri
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: repository_type
        required: true
        schema:
          $ref: '#/components/schemas/RepositoryType'
        style: form
      - explode: true
        in: query
        name: context
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The description for repository.
        "404":
          description: The repository was not found.
      summary: Used to retrieve description for a repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.osbrepository_controller
  /osbrepository/info:
    get:
      operationId: get_info
      parameters:
      - explode: true
        in: query
        name: uri
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: repository_type
        required: true
        schema:
          $ref: '#/components/schemas/RepositoryType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryInfo'
          description: The list of repository contexts.
        "404":
          description: The repository was not found.
      summary: Used to retrieve a list of contexts of a repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.osbrepository_controller
  /osbrepository/{id}:
    delete:
      operationId: osbrepository_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "the context for getting the resources, optional"
        explode: true
        in: query
        name: context
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: The OSBRepository was deleted.
        "404":
          description: The OSBRepository was not found.
      security:
      - bearerAuth: []
      summary: Delete a OSBRepository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    get:
      operationId: osbrepository_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "the context for getting the resources, optional"
        explode: true
        in: query
        name: context
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSBRepository'
          description: The repository.
        "404":
          description: The repository was not found.
      summary: Used to retrieve a repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    put:
      operationId: osbrepository_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "the context for getting the resources, optional"
        explode: true
        in: query
        name: context
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSBRepository'
        description: The repository to save.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSBRepository'
          description: The workspace was updated.
        "404":
          description: The workspace was not found.
      security:
      - bearerAuth: []
      summary: Update a OSB repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /ready:
    get:
      operationId: ready
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ready
        "500":
          description: Application is not ready yet
      summary: Test if application is ready to take requests
      tags:
      - k8s
      x-openapi-router-controller: workspaces.controllers.k8s_controller
  /tag:
    get:
      operationId: tag_get
      parameters:
      - description: The page number for starting to collect the result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: The number of items to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: "The search string for filtering of the items to return. Format\
          \ [field/relation[field]][comparator = , __not= , __like= ][value]"
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: name__like=%Tag 1%
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_tag_get_200_response'
          description: Return all available tags
      summary: Used to list all available tags.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    post:
      operationId: tag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        description: The Tag to save.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Save successful.
        "400":
          description: The Tag already exists.
      security:
      - bearerAuth: []
      summary: Used to save a Tag to the repository. The user_id (keycloak user id)
        will be automatically filled with the current user
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /tag/{id}:
    delete:
      operationId: tag_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The tag was deleted.
        "404":
          description: The tag was not found.
      security:
      - bearerAuth: []
      summary: Delete an tag from the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    get:
      operationId: tag_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The tag.
        "404":
          description: The tag was not found.
      summary: Used to retrieve an tag from the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    put:
      operationId: tag_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        description: The tag to save.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The tag was updated.
        "404":
          description: The tag was not found.
      security:
      - bearerAuth: []
      summary: Update an tag in the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /volumestorage:
    get:
      operationId: volumestorage_get
      parameters:
      - description: The page number for starting to collect the result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: The number of items to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: "The search string for filtering of the items to return. Format\
          \ [field/relation[field]][comparator = , __not= , __like= ][value]"
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: name__like=%storage%
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_volumestorage_get_200_response'
          description: Return all available volumestorages
      security:
      - bearerAuth: []
      summary: Used to list all available volumestorages.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    post:
      operationId: volumestorage_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeStorage'
        description: The VolumeStorage to save.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeStorage'
          description: Save successful.
        "400":
          description: The VolumeStorage already exists.
      security:
      - bearerAuth: []
      summary: Used to save a VolumeStorage to the repository. The user_id (keycloak
        user id) will be automatically filled with the current user
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /volumestorage/{id}:
    delete:
      operationId: volumestorage_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The volumestorage was deleted.
        "404":
          description: The volumestorage was not found.
      security:
      - bearerAuth: []
      summary: Delete an volumestorage from the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    get:
      operationId: volumestorage_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeStorage'
          description: The volumestorage.
        "404":
          description: The volumestorage was not found.
      summary: Used to retrieve an volumestorage from the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    put:
      operationId: volumestorage_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeStorage'
        description: The volumestorage to save.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeStorage'
          description: The volumestorage was updated.
        "404":
          description: The volumestorage was not found.
      security:
      - bearerAuth: []
      summary: Update an volumestorage in the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspace:
    get:
      operationId: workspace_get
      parameters:
      - description: The page number for starting to collect the result set.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: The number of items to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: "The search string for filtering of the items to return. Multiple\
          \ criteria are seperated by '+' (and operator is applied). Format [field/relation[field]][comparator\
          \ = , __not= , __like= ][value]"
        examples:
          Search by name, id and tag:
            value: "name__like=Work%+id__=1+tags[tag]=Tag"
        explode: true
        in: query
        name: q
        required: false
        schema:
          example: "name__like=Work%+id__=1+tags[tag]=Tag"
          type: string
        style: form
      - description: The tags to filter with Multiple parameters are concatenated
          with + (OR operator)
        explode: true
        in: query
        name: tags
        required: false
        schema:
          example: tag1+tag2
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_workspace_get_200_response'
          description: Return all available workspaces
      security:
      - {}
      - bearerAuth: []
      summary: Used to list all available workspaces.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    post:
      operationId: workspace_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
        description: The Workspace to save.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Save successful.
        "400":
          description: The Workspace already exists.
        "405":
          description: Not allowed to create a new workspace
      security:
      - bearerAuth: []
      summary: Used to save a Workspace to the repository. The user_id (keycloak user
        id) will be automatically filled with the current user
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspace/{id}:
    delete:
      operationId: workspace_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The workspace was deleted.
        "404":
          description: The workspace was not found.
      security:
      - bearerAuth: []
      summary: Delete a workspace from the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    get:
      operationId: workspace_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: The workspace.
        "404":
          description: The workspace was not found.
      security:
      - {}
      - bearerAuth: []
      summary: Used to retrieve a workspace from the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    put:
      operationId: workspace_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
        description: The workspace to save.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: The workspace was updated.
        "404":
          description: The workspace was not found.
      security:
      - bearerAuth: []
      summary: Update a workspace in the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspace/{id}/clone:
    put:
      operationId: workspaces_controllers_workspace_controller_workspace_clone
      parameters:
      - description: Workspace ID of the workspace
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: The workspace was cloned.
        "404":
          description: The workspace was not found
      security:
      - bearerAuth: []
      summary: Clones a workspace
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspace/{id}/gallery:
    post:
      operationId: workspaces_controllers_workspace_controller_addimage
      parameters:
      - description: Workspace ID of the workspace
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/workspaces_controllers_workspace_controller_addimage_request'
      responses:
        "200":
          description: The image was added to the workspace.
        "404":
          description: The workspace was not found or the image was not specified
      security:
      - bearerAuth: []
      summary: Adds and image to the workspace.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspace/{id}/gallery/{image_id}:
    delete:
      operationId: delimage
      parameters:
      - description: Workspace ID of the workspace
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Workspace Image Id to be deleted from the workspace
        explode: false
        in: path
        name: image_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The Workspace Image is successfully deleted from the workspace.
        "404":
          description: The workspace was not found.
      security:
      - bearerAuth: []
      summary: Delete a Workspace Image from the workspace.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.workspace_controller
  /workspace/{id}/import:
    post:
      operationId: workspaces_controllers_workspace_controller_import_resources
      parameters:
      - description: Workspace ID of the workspace
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workspaces_controllers_workspace_controller_import_resources_request'
      responses:
        "200":
          description: The workspace was updated with the thumbnail.
        "404":
          description: The workspace was not found or the thumbnail was not specified
      security:
      - bearerAuth: []
      summary: Imports the ResourceOrigins into the Workspace and creates/updates
        the workspace resources
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspace/{id}/thumbnail:
    post:
      operationId: workspaces_controllers_workspace_controller_setthumbnail
      parameters:
      - description: Workspace ID of the workspace
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/workspaces_controllers_workspace_controller_setthumbnail_request'
      responses:
        "200":
          description: The workspace was updated with the thumbnail.
        "404":
          description: The workspace was not found or the thumbnail was not specified
      security:
      - bearerAuth: []
      summary: Sets the thumbnail of the workspace.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspaceresource:
    post:
      operationId: workspaceresource_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceResource'
        description: The WorkspaceResource to save.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
          description: Save successful.
        "400":
          description: The WorkspaceResource already exists.
      security:
      - bearerAuth: []
      summary: Used to save a WorkspaceResource to the repository.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspaceresource/{id}:
    delete:
      operationId: workspaceresource_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The WorkspaceResource was deleted.
        "404":
          description: The WorkspaceResource was not found.
      security:
      - bearerAuth: []
      summary: Delete a WorkspaceResource.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    get:
      operationId: workspaceresource_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
          description: The WorkspaceResource.
        "404":
          description: The WorkspaceResource was not found.
      security:
      - bearerAuth: []
      summary: Used to retrieve a WorkspaceResource.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
    put:
      operationId: workspaceresource_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceResource'
        description: The WorkspaceResource to save.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
          description: The WorkspaceResource was updated.
        "404":
          description: The WorkspaceResource was not found.
      security:
      - bearerAuth: []
      summary: Update the WorkspaceResource.
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
  /workspaceresource/{id}/open:
    get:
      operationId: workspaces_controllers_workspace_resource_controller_open
      parameters:
      - description: WorkspaceResource ID of the WorkspaceResource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The WorkspaceResource was updated.
        "404":
          description: The WorkspaceResource was not found.
      security:
      - bearerAuth: []
      summary: Used to register a WorkspaceResource open action. The WorkspaceResource
        timestamp last open will be updated
      tags:
      - rest
      x-openapi-router-controller: workspaces.controllers.rest_controller
components:
  schemas:
    Valid:
      properties:
        response:
          type: string
      type: object
    Pagination:
      example:
        total: 1
        number_of_pages: 6
        current_page: 0
      properties:
        current_page:
          title: current_page
          type: integer
        number_of_pages:
          title: number_of_pages
          type: integer
        total:
          title: total
          type: integer
      title: Pagination
      type: object
    PrimaryKey:
      title: PrimaryKey
      type: integer
      x-primary-key: true
      x-autoincrement: true
    RepositoryType:
      description: |
        Repository type:
          * dandi - DANDI repository
          * figshare - FigShare repository
          * github - Github repository
      enum:
      - dandi
      - figshare
      - github
      title: RepositoryType
      type: string
    RepositoryContentType:
      description: |
        Repository Content type:
          * experimental - Experimental data
          * modeling - Modeling
      enum:
      - experimental
      - modeling
      title: RepositoryContentType
      type: string
    ResourceType:
      default: g
      description: |
        Resource type:
         * e - Experimental
         * m - Model
         * g - Generic
         * u - Unknown (to be defined)
      enum:
      - e
      - m
      - g
      - u
      example: g
      title: ResourceType
      type: string
    ResourceStatus:
      default: p
      description: |
        Resource status:
         * a - Available
         * e - Error, not available
         * p - Pending
      enum:
      - a
      - e
      - p
      example: p
      title: ResourceStatus
      type: string
    ImageType:
      title: thumbnail
      type: string
    User:
      description: Keycloak User
      properties:
        id:
          description: Keycloak user id
          title: id
          type: string
        first_name:
          description: First Name of the keycloak user
          title: first_name
          type: string
        last_name:
          description: Last Name of the keycloak user
          title: last_name
          type: string
        username:
          description: Username of the keycloak user
          title: username
          type: string
        email:
          description: Email address of the keycloak user
          title: email
          type: string
      title: User
      type: object
    WorkspaceBase:
      description: Workspace item
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          description: Workspace name.
          example: Workspace One
          title: name
          type: string
        description:
          description: Workspace description.
          example: Workspace One description
          title: description
          type: string
        timestamp_created:
          description: Date/time the Workspace is created
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_created
          type: string
        timestamp_updated:
          description: Date/time the Workspace is last updated
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_updated
          type: string
        last_opened_resource_id:
          description: The workspace resource id the workspace is opened last with
          title: last_opened_resource_id
          type: integer
        thumbnail:
          title: thumbnail
          type: string
        gallery:
          description: Gallery with images of the workspace
          items:
            $ref: '#/components/schemas/WorkspaceBase_gallery_inner'
          title: gallery
          type: array
        user_id:
          description: "Workspace keycloak user id, will be automatically be set to\
            \ the logged in user"
          title: user_id
          type: string
        publicable:
          default: false
          description: Is this a public workspace? Default false
          example: false
          title: publicable
          type: boolean
        featured:
          default: false
          description: Is this a featured workspace? Default false
          example: false
          title: featured
          type: boolean
        license:
          description: Workspace license
          example: license
          title: license
          type: string
        collaborators:
          description: Collaborators who work on the workspace
          items:
            $ref: '#/components/schemas/WorkspaceCollaborator'
          title: collaborators
          type: array
        storage:
          $ref: '#/components/schemas/VolumeStorage'
        tags:
          items:
            $ref: '#/components/schemas/WorkspaceBase_tags_inner'
          title: tags
          type: array
      required:
      - description
      - name
      title: WorkspaceBase
      type: object
    WorkspaceEntity:
      allOf:
      - $ref: '#/components/schemas/WorkspaceBase'
      - $ref: '#/components/schemas/WorkspaceEntity_allOf'
      description: Workspace model
    Workspace:
      allOf:
      - $ref: '#/components/schemas/WorkspaceBase'
      - $ref: '#/components/schemas/Workspace_allOf'
      description: Workspace extended
      title: Workspace
    WorkspaceCollaborator:
      description: Workspace Collaborator of a workspace
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        user_id:
          description: Workspace Collaborator keycloak user id
          title: user_id
          type: string
      required:
      - user_id
      title: WorkspaceCollaborator
      type: object
      x-tablename: workspacecollaborator
    WorkspaceImage:
      description: Workspace images of a workspace
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        image:
          title: thumbnail
          type: string
      required:
      - image
      title: WorkspaceImage
      type: object
      x-tablename: workspaceimage
    WorkspaceResourceBase:
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          description: WorkspaceResource name
          example: Workspace Resource One
          title: name
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
        timestamp_created:
          description: Date/time of creation of the WorkspaceResource
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_created
          type: string
        timestamp_updated:
          description: Date/time of last updating of the WorkspaceResource
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_updated
          type: string
        timestamp_last_opened:
          description: Date/time of last opening of the WorkspaceResource
          format: date-time
          title: timestamp_last_opened
          type: string
        resource_type:
          $ref: '#/components/schemas/ResourceType'
        path:
          description: WorkspaceResource path where the resource will stored in the
            pvc.
          example: repo/sample.nwb
          title: path
          type: string
      required:
      - name
      - resource_type
      title: WorkspaceResourceBase
      type: object
    WorkspaceResource:
      allOf:
      - $ref: '#/components/schemas/WorkspaceResourceBase'
      - $ref: '#/components/schemas/WorkspaceResource_allOf'
      description: Workspace Resource item of a Workspace
      title: WorkspaceResource
    WorkspaceResourceEntity:
      allOf:
      - $ref: '#/components/schemas/WorkspaceResourceBase'
      - $ref: '#/components/schemas/WorkspaceResourceEntity_allOf'
      description: Workspace Resource item of a Workspace
      title: WorkspaceResourceEntity
    VolumeStorage:
      description: Volume which can be connected to a workspace
      example:
        name: Storage Volume One
        id: 0
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          description: StorageVolume name
          example: Storage Volume One
          title: name
          type: string
      required:
      - name
      title: VolumeStorage
      type: object
      x-tablename: volumestorage
    OSBRepositoryBase:
      description: OSB Repository Base model
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        name:
          description: Repository name.
          example: Repo One
          title: name
          type: string
        summary:
          description: Summary describing the OSB Repository
          example: Sample repository with experimental data
          title: summary
          type: string
        repository_type:
          $ref: '#/components/schemas/RepositoryType'
        content_types:
          description: List of Repository Content Types
          title: content_types
          type: string
        auto_sync:
          default: true
          description: Auto sync of the resources
          example: true
          title: auto_sync
          type: boolean
        uri:
          description: URI of the repository
          example: https://github.com/OpenSourceBrain/OSBv2
          title: uri
          type: string
        default_context:
          description: The default branch to show for this repository
          example: develop
          title: default_context
          type: string
        user_id:
          description: "OSBRepository keycloak user id, will be automatically be set\
            \ to the logged in user"
          title: user_id
          type: string
        timestamp_created:
          description: Date/time the Workspace is created
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_created
          type: string
        timestamp_updated:
          description: Date/time the Workspace is last updated
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_updated
          type: string
        tags:
          items:
            $ref: '#/components/schemas/OSBRepositoryBase_tags_inner'
          title: tags
          type: array
      required:
      - content_types
      - name
      - repository_type
      - uri
      title: OSBRepositoryBase
      type: object
    OSBRepositoryEntity:
      allOf:
      - $ref: '#/components/schemas/OSBRepositoryBase'
      - x-tablename: osbrepository
      description: OSB Repository model
    OSBRepository:
      allOf:
      - $ref: '#/components/schemas/OSBRepositoryBase'
      - $ref: '#/components/schemas/OSBRepository_allOf'
      description: OSBRepository extended model
      title: OSBRepository
    ResourceBase:
      description: Resource Base
      properties:
        name:
          description: file name
          example: file.ext
          title: name
          type: string
        path:
          description: Download URL of the Resource
          example: https://raw.githubusercontent.com/OpenSourceBrain/OSBv2/master/.gitignore
          title: path
          type: string
      title: ResourceBase
      type: object
    RepositoryResourceBase:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/RepositoryResourceBase_allOf'
      description: Resource (files/folders) of an OSBRepository
      title: RepositoryResourceBase
    FigshareRepositoryResource:
      allOf:
      - $ref: '#/components/schemas/RepositoryResourceBase'
      description: figshare repository resource
      title: FigshareRepositoryResource
    DandiRepositoryResource:
      allOf:
      - $ref: '#/components/schemas/RepositoryResourceBase'
      description: dandi repository resource
      title: DandiRepositoryResource
    GITRepositoryResource:
      allOf:
      - $ref: '#/components/schemas/RepositoryResourceBase'
      - $ref: '#/components/schemas/GITRepositoryResource_allOf'
      description: github repository resource
      title: GITRepositoryResource
    DownloadResource:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      description: Download Resource (files/folders)
      title: DownloadResource
    RepositoryResource:
      description: Repository resource
      oneOf:
      - $ref: '#/components/schemas/FigshareRepositoryResource'
      - $ref: '#/components/schemas/DandiRepositoryResource'
      - $ref: '#/components/schemas/GITRepositoryResource'
      title: RepositoryResource
    ResourceOrigin:
      description: optional Resource where the WorkspaceResource is build from
      oneOf:
      - $ref: '#/components/schemas/RepositoryResource'
      - $ref: '#/components/schemas/DownloadResource'
      title: ResourceOrigin
    RepositoryResourceNode:
      description: Tree node (files/folders) of a Repository tree
      example:
        name: /
        timestamp_modified: 2019-11-23T01:23:45.000Z
        children:
        - name: README.md
          timestamp_modified: 2019-11-23T01:23:45.000Z
        - name: applications
          timestamp_modified: 2019-11-23T01:23:45.000Z
          children:
          - name: accounts
            timestamp_modified: 2019-11-23T01:23:45.000Z
            children:
            - name: Dockerfile
              timestamp_modified: 2019-11-23T01:23:45.000Z
      properties:
        resource:
          $ref: '#/components/schemas/RepositoryResource'
        children:
          items:
            $ref: '#/components/schemas/RepositoryResourceNode'
          type: array
      title: RepositoryResourceNode
      type: object
    Tag:
      description: Tags
      example:
        id: 0
        tag: tag
      properties:
        id:
          title: PrimaryKey
          type: integer
          x-primary-key: true
          x-autoincrement: true
        tag:
          title: tag
          type: string
          x-unique: true
          x-index: true
      title: Tag
      type: object
      x-tablename: tag
    RepositoryInfo:
      description: ""
      example:
        summary: summary
        name: name
        contexts:
        - contexts
        - contexts
        tags:
        - tags
        - tags
      properties:
        contexts:
          description: ""
          items:
            type: string
          title: contexts
          type: array
        name:
          description: ""
          title: name
          type: string
        summary:
          description: ""
          title: summary
          type: string
        tags:
          description: ""
          items:
            type: string
          title: tags
          type: array
      title: RepositoryInfo
      type: object
    _workspace_get_200_response:
      example:
        pagination:
          total: 1
          number_of_pages: 6
          current_page: 0
        workspaces:
        - null
        - null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          title: workspaces
          type: array
      title: _workspace_get_200_response
      type: object
    workspaces_controllers_workspace_controller_import_resources_request:
      properties:
        resourceorigins:
          items:
            $ref: '#/components/schemas/ResourceOrigin'
          title: resourceorigins
          type: array
      title: workspaces_controllers_workspace_controller_import_resources_request
      type: object
    workspaces_controllers_workspace_controller_setthumbnail_request:
      properties:
        thumbNail:
          format: binary
          type: string
      type: object
    workspaces_controllers_workspace_controller_addimage_request:
      properties:
        image:
          format: binary
          type: string
      type: object
    _osbrepository_get_200_response:
      example:
        pagination:
          total: 1
          number_of_pages: 6
          current_page: 0
        osbrepositories:
        - null
        - null
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        osbrepositories:
          items:
            $ref: '#/components/schemas/OSBRepository'
          title: osbrepositories
          type: array
      title: _osbrepository_get_200_response
      type: object
    _volumestorage_get_200_response:
      example:
        pagination:
          total: 1
          number_of_pages: 6
          current_page: 0
        volumestorages:
        - name: Storage Volume One
          id: 0
        - name: Storage Volume One
          id: 0
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        volumestorages:
          items:
            $ref: '#/components/schemas/VolumeStorage'
          title: volumestorages
          type: array
      title: _volumestorage_get_200_response
      type: object
    _tag_get_200_response:
      example:
        pagination:
          total: 1
          number_of_pages: 6
          current_page: 0
        tags:
        - id: 0
          tag: tag
        - id: 0
          tag: tag
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          title: tags
          type: array
      title: _tag_get_200_response
      type: object
    WorkspaceBase_gallery_inner:
      allOf:
      - $ref: '#/components/schemas/WorkspaceImage'
      title: WorkspaceBase_gallery_inner
    WorkspaceBase_tags_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - x-secondary: workspace_tag
      title: WorkspaceBase_tags_inner
    WorkspaceEntity_allOf:
      properties:
        resources:
          description: Resources of the workspace
          items:
            $ref: '#/components/schemas/WorkspaceResourceEntity'
          title: resources
          type: array
      title: WorkspaceEntity_allOf
      x-tablename: workspace
      example: null
    Workspace_allOf:
      description: extra attributes
      properties:
        resources:
          description: Resources of the workspace
          items:
            $ref: '#/components/schemas/WorkspaceResource'
          title: resources
          type: array
        user:
          $ref: '#/components/schemas/User'
      title: Workspace_allOf
      type: object
      example: null
    WorkspaceResource_allOf:
      properties:
        workspace_id:
          description: workspace_id
          title: workspace_id
          type: integer
        origin:
          $ref: '#/components/schemas/ResourceOrigin'
      title: WorkspaceResource_allOf
      example: null
    WorkspaceResourceEntity_allOf:
      properties:
        origin:
          description: Origin data JSON formatted of the WorkspaceResource
          title: origin
          type: string
        workspace_id:
          description: workspace_id
          title: workspace_id
          type: integer
          x-foreign-key: workspace.id
      title: WorkspaceResourceEntity_allOf
      x-tablename: Workspaceresource
      example: null
    OSBRepositoryBase_tags_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - x-secondary: osbrepository_tag
      title: OSBRepositoryBase_tags_inner
    OSBRepository_allOf:
      description: extra attributes
      properties:
        context_resources:
          $ref: '#/components/schemas/RepositoryResourceNode'
        contexts:
          items:
            type: string
          title: contexts
          type: array
        user:
          $ref: '#/components/schemas/User'
        content_types_list:
          items:
            $ref: '#/components/schemas/RepositoryContentType'
          title: content_types_list
          type: array
        description:
          description: Repository description
          title: description
          type: string
        timestamp_modified:
          description: Date/time the OSBReposity is last modified
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_modified
          type: string
      title: OSBRepository_allOf
      type: object
      example: null
    RepositoryResourceBase_allOf:
      description: GIT hub specific attributes of the RepositoryResource
      properties:
        osbrepository_id:
          description: OSB Repository id
          example: 1
          title: osbrepository_id
          type: integer
        size:
          description: File size in bytes of the RepositoryResource
          example: 65535
          format: int64
          title: size
          type: integer
        timestamp_modified:
          description: Date/time the ReposityResource is last modified
          example: 2019-11-23T01:23:45Z
          format: date-time
          title: timestamp_modified
          type: string
      title: RepositoryResourceBase_allOf
      type: object
      example: null
    GITRepositoryResource_allOf:
      description: GIT hub specific attributes of the RepositoryResource
      properties:
        ref:
          description: The GIT ref
          example: develop
          title: ref
          type: string
        sha:
          description: The GIT sha of the resource
          title: sha
          type: string
      title: GITRepositoryResource_allOf
      type: object
      example: null
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: cloudharness.auth.AuthClient.decode_token
