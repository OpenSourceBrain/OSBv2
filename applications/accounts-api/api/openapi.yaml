openapi: 3.0.2
info:
    title: accounts_api
    version: 0.1.0
    description: Accounts rest api
    contact:
        email: cloudharness@metacell.us
    license:
        name: UNLICENSED
servers:
    -
        url: /api
paths:
    /live:
        get:
            tags:
                - infrastructure
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: Healthy
                '500':
                    description: Application is not healthy
            operationId: live
            summary: Test if application is healthy
    /ready:
        get:
            tags:
                - infrastructure
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: Ready
                '500':
                    description: Application is not ready yet
            operationId: ready
            summary: Test if application is ready to take requests
    /users:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: The user as just saved
            security:
                -
                    bearerAuth: []
            operationId: createUser
    '/users/{userid}':
        get:
            tags:
                - users
            parameters:
                -
                    name: userid
                    description: user id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Get a user's public information
            operationId: getUser
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: The user as just saved
            security:
                -
                    bearerAuth: []
            operationId: updateUser
        parameters:
            -
                name: userid
                description: user id
                schema:
                    type: string
                in: path
                required: true
    '/groups/{groupname}/':
        get:
            tags:
                - groups
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Get a user's public information
            operationId: getGroup
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            tags:
                - groups
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: The user as just saved
            security:
                -
                    bearerAuth: []
            operationId: updateGroup
        parameters:
            -
                name: groupname
                schema:
                    type: string
                in: path
                required: true
    '/groups/{groupname}/users':
        get:
            tags:
                - groups
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Group'
                    description: Get a user's public information
            operationId: getGroupUsers
        parameters:
            -
                name: groupname
                schema:
                    type: string
                in: path
                required: true
components:
    schemas:
        Valid:
            type: object
            properties:
                response:
                    type: string
        Url:
            description: ''
            type: string
        Profiles:
            description: ''
            type: object
            additionalProperties: true
        User:
            description: Keycloak User
            type: object
            properties:
                id:
                    description: user id
                    type: string
                username:
                    description: Username of the keycloak user
                    type: string
                email:
                    description: Email address of the keycloak user
                    type: string
                firstName:
                    description: First Name of the keycloak user
                    type: string
                lastName:
                    description: Last Name of the keycloak user
                    type: string
                groups:
                    description: ''
                    type: array
                    items:
                        type: string
                    readOnly: true
                profiles:
                    $ref: '#/components/schemas/Profiles'
                    description: 'External links to user profiles (e.g. GitHub, Twitter, etc.)'
                registrationDate:
                    format: date
                    description: ''
                    type: string
                avatar:
                    $ref: '#/components/schemas/Url'
                    description: ''
                website:
                    $ref: '#/components/schemas/Url'
                    description: ''
                quotas:
                    $ref: '#/components/schemas/Profiles'
                    description: ''
            additionalProperties: true
        Group:
            description: ''
            required:
                - name
            type: object
            properties:
                quotas:
                    $ref: '#/components/schemas/Profiles'
                    description: ''
                name:
                    description: ''
                    type: string
                description:
                    description: ''
                links:
                    $ref: '#/components/schemas/Profiles'
                    description: ''
                keywords:
                    description: ''
                    type: array
                    items:
                        type: string
    securitySchemes:
        bearerAuth:
            scheme: bearer
            bearerFormat: JWT
            type: http
            x-bearerInfoFunc: cloudharness.auth.decode_token
tags:
    -
        name: infrastructure
        description: ''
    -
        name: users
        description: ''
